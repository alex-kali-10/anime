# Generated by Django 3.0.5 on 2020-05-03 14:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block_video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voice', models.CharField(default='', max_length=30, verbose_name='Озвучка')),
                ('player', models.CharField(choices=[('Kodik', 'Kodik'), ('Sibnet', 'Sibnet')], max_length=20, verbose_name='Плеер')),
            ],
            options={
                'db_table': 'видео',
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='img/standart.png', null=True, upload_to='img', verbose_name='аватарка')),
                ('name', models.CharField(default='', max_length=100, verbose_name='имя')),
                ('year', models.IntegerField(verbose_name='год')),
                ('season', models.CharField(choices=[('Весна', 'Весна'), ('Лето', 'Лето'), ('Осень', 'Осень'), ('Зима', 'Зима')], max_length=9, verbose_name='сезон')),
                ('age_rating', models.CharField(choices=[('G (для всех возрастов)', 'G (для всех возрастов)'), ('PG (для детей)', 'PG (для детей)'), ('PG-13 (от 13 лет)', 'PG-13 (от 13 лет)'), ('R-17+ (насилие и/или нецензурная лексика)', 'R-17+ (насилие и/или нецензурная лексика)'), ('R+ (частичная нагота)', 'R+ (частичная нагота)')], max_length=50, verbose_name='Возрастной рейтинг')),
                ('source', models.CharField(choices=[('Манга', 'Манга'), ('Оригинал', 'Оригинал'), ('Лайт новелла', 'Лайт новелла'), ('Визуальная новелла', 'Визуальная новелла')], max_length=20, verbose_name='Первоисточник')),
                ('studio', models.CharField(default='', max_length=30, verbose_name='студия')),
                ('producer', models.CharField(default='', max_length=30, verbose_name='режисер')),
                ('type', models.CharField(choices=[('Полнометражный фильм', 'Полнометражный фильм'), ('Сериал', 'Сериал')], max_length=20, verbose_name='Тип')),
                ('description', models.CharField(default='', max_length=1000, verbose_name='Описание')),
                ('state', models.CharField(choices=[('вышел', 'вышел'), ('выходит', 'выходит'), ('анонс', 'анонс')], default='вышел', max_length=20, verbose_name='статус')),
                ('views', models.IntegerField(default=0, verbose_name='просмотры')),
            ],
            options={
                'db_table': 'film',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='имя')),
                ('data', models.CharField(default='', max_length=5000)),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='One_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=100)),
                ('type', models.CharField(choices=[('checkbox', 'checkbox'), ('radio', 'radio')], max_length=30)),
            ],
            options={
                'db_table': '1вопрос',
            },
        ),
        migrations.CreateModel(
            name='Question_block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
            options={
                'db_table': 'блок вопроса',
            },
        ),
        migrations.CreateModel(
            name='Recommend_video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(default='', max_length=100, verbose_name='link')),
            ],
        ),
        migrations.CreateModel(
            name='Response_question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=100)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.One_question')),
            ],
            options={
                'db_table': 'вопрос',
            },
        ),
        migrations.CreateModel(
            name='Response_block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Question_block')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'блок ответа',
            },
        ),
        migrations.CreateModel(
            name='One_response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.One_question')),
                ('response_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Response_block')),
            ],
            options={
                'db_table': '1ответ',
            },
        ),
        migrations.AddField(
            model_name='one_question',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Question_block'),
        ),
        migrations.CreateModel(
            name='My_response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.BooleanField()),
                ('one_response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.One_response')),
                ('response_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Response_question')),
            ],
            options={
                'db_table': 'ответ',
            },
        ),
        migrations.CreateModel(
            name='Item_video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href_video', models.CharField(default='', max_length=100, verbose_name='ссылка')),
                ('name', models.CharField(default='', max_length=100, verbose_name='имя')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('block_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='main.Block_video')),
            ],
            options={
                'db_table': 'одна ссылка на видео',
            },
        ),
        migrations.CreateModel(
            name='Item_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(default='', max_length=100, verbose_name='жанр')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Film')),
            ],
            options={
                'db_table': 'genr',
            },
        ),
        migrations.CreateModel(
            name='Comment_film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=300)),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment_film',
            },
        ),
        migrations.CreateModel(
            name='Carma_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carma', models.CharField(choices=[('like', 'like'), ('dislike', 'dislike')], max_length=20)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Comment_film')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'carma',
            },
        ),
        migrations.AddField(
            model_name='block_video',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block', to='main.Film'),
        ),
    ]
